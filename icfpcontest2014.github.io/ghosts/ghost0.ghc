; Save current ghost direction
int 3          ; ghost index --> A
int 6          ; direction --> B
mov g, b       ; direction --> G
mov h, b       ; direction --> H

; ------------------------------ If current direction -- DIRECTION_UP
jeq CHECK_UP, g, DIRECTION_UP
jeq CHECK_RIGHT, g, DIRECTION_RIGHT
jeq CHECK_DOWN, g, DIRECTION_DOWN
jeq CHECK_LEFT, g, DIRECTION_LEFT

CHECK_UP:
; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x+1, y)
add a, 1       ; add (x+1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_RIGHT	  ; select next move  
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way

; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x, y-1)
sub b, 1       ; sub (y-1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_UP	  ; select next move 
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way


; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x-1, y)
sub a, 1       ; sub (x-1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_LEFT	  ; select next move 
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way


; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x, y+1)
add b, 1       ; add (y+1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_DOWN	  ; select next move  
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way



; ------------------------------ If current direction -- DIRECTION_RIGHT

CHECK_RIGHT:
; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x, y+1)
add b, 1       ; add (y+1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_DOWN	  ; select next move  
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way


; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x+1, y)
add a, 1       ; add (x+1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_RIGHT  ; select next move  
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way


; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x, y-1)
sub b, 1       ; sub (y-1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_UP	  ; select next move 
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way


; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x-1, y)
sub a, 1       ; sub (x-1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_LEFT	  ; select next move 
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way



; ------------------------------ If current direction -- DIRECTION_DOWN

CHECK_DOWN:
; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x-1, y)
sub a, 1       ; sub (x-1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_LEFT	  ; select next move 
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way


; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x, y+1)
add b, 1       ; add (y+1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_DOWN	  ; select next move  
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way


; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x+1, y)
add a, 1       ; add (x+1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_RIGHT  ; select next move  
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way


; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x, y-1)
sub b, 1       ; sub (y-1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_UP	  ; select next move 
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way




; ------------------------------ If current direction -- DIRECTION_LEFT


CHECK_LEFT:
; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x, y-1)
sub b, 1       ; sub (y-1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_UP	  ; select next move 
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way


; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x-1, y)
sub a, 1       ; sub (x-1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_LEFT	  ; select next move 
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way


; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x, y+1)
add b, 1       ; add (y+1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_DOWN	  ; select next move  
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way


; ---------------------------
; Get coordinate
int 3          ; ghost index --> A
int 5          ; x ---> A, y ---> B

; Check cell (x+1, y)
add a, 1       ; add (x+1) to current position
int 7          ; Get current CELL content in A
mov h, DIRECTION_RIGHT  ; select next move  
jgt GO_NEXT,a,CELL_WALL   ; if there is no WALL - go that way



GO_NEXT:
mov a, h 	   ; direction ---> A

int 0          ; set direction
hlt            ; Stop.
