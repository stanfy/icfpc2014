; [0] --- current state
;  == 0 -- moving to LM
;  == 1 -- moving to Corner 1
;  == 2 -- moving to Corner 2
;  == 3 -- moving to Corner 3
;  == 4 -- moving to Corner 4

; [1] --- counter
; [2] --- next Corner  0, 1, 2, 3
;
;
;  10 --- steps to Corner
;  20 --- steps to LM

; ---- check counter
mov a, [0]
mov b, [1]
mov c, [2]
jeq ZERO_COUNTER, [1], 0    ; check counter
sub [1], 1					   ; counter > 0
jeq CHECK_STATE, 1, 1

; ---- counter == 0
ZERO_COUNTER:
jeq ZERO_STATE, [0], 0 ; check state
mov [0], 0
mov [1], 20
jeq CHECK_STATE, 1, 1

ZERO_STATE:
inc [2]
mov [0], [2]
and [2], 3
mov [1], 10
jeq CHECK_STATE, 1, 1


; ---- counter > 0
CHECK_STATE:
jeq RUN_TO_LM,[0], 0    ; move to LM
jeq RUN_TO_CORNER_1,[0], 1 
jeq RUN_TO_CORNER_2,[0], 2 
jeq RUN_TO_CORNER_3,[0], 3 
jeq RUN_TO_CORNER_4,[0], 4 


; ------------------------ MOVING TO LM
RUN_TO_LM:
int 1		   ; LM coordinate
mov [10], A	   ; LM x
mov [11], B     ; LM y
jeq START_MOVING, 1, 1

; ------------------------ MOVING TO CORNER 1
RUN_TO_CORNER_1:
mov [10], 0	   
mov [11], 0    
jeq START_MOVING, 1, 1

; ------------------------ MOVING TO CORNER 2
RUN_TO_CORNER_2:
mov [10], 0	   
mov [11], 255  
jeq START_MOVING, 1, 1

; ------------------------ MOVING TO CORNER 3
RUN_TO_CORNER_3:
mov [10], 255	   
mov [11], 0 
jeq START_MOVING, 1, 1

; ------------------------ MOVING TO CORNER 4
RUN_TO_CORNER_4:
mov [10], 255	   
mov [11], 255   
jeq START_MOVING, 1, 1


; -------------------------  START_MOVING
START_MOVING:
mov D, 255     ; max path score
mov E, 255     ; candidate direction (min direction --> E)

; start loop
LOOP:
inc E

; getting opposite direction
mov F, E
add F, 2
and F, 3
jeq END_L, E, F

; get content of the cell ---> A
; out: [240] -> x, [241] -> y
mov [240], E
FUNCTION FN_CONTENT_CELL_ON_DIRECTION

jeq END_L, A, CELL_WALL

; get score path 
; 240(x1), 241(y1), 250(x2), 251(y2)
mov [250], [10]
mov [251], [11] 
FUNCTION FN_PATH_SCORES_BETWEEN_CELLS

jgt END_L, A, D  	; if current score is less than score in D --> int0

mov D, A
mov A, E
int 0

END_L:
jlt LOOP, E, 3 

hlt